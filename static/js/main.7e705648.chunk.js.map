{"version":3,"sources":["HowToPlay.js","AlertDialog.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","typography","padding","spacing","HowToPlay","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","aria-describedby","size","onClick","event","currentTarget","startIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Box","m","textAlign","Typography","variant","href","target","src","width","height","title","AlertDialog","alertTitle","alertDetails","buttonTitle","isOpen","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","color","useEffect","useLocalState","localStorageKey","localStorage","getItem","value","setValue","setItem","App","answer","setAnswer","guess","setGuess","attempt","setAttempt","attemptHistory","setHistory","seconds","setSec","isTimerActive","setIsTimerActive","setOpen","isCorrect","setIsCorrect","fastest","setFastest","least","setLeast","alertMessage","setAlertMessage","generateNumber","body","button","setIsSubmitDisabled","setIsTextDisabled","interval","setInterval","clearInterval","numbers","sort","Math","random","fourNum","slice","join","pastAttempts","Object","entries","map","key","TableRow","TableCell","align","attemptNumber","AsBs","regexp","guessError","setGuessError","guessHelper","setGuessHelper","isSubmitDisabled","isTextDisabled","className","display","flexDirection","justifyContent","p","alt","gutterBottom","autoFocus","TextField","error","label","onChange","guessInput","test","nums","Set","length","helperText","inputProps","maxLength","disabled","guessed","history","values","some","item","a","b","i","number","includes","newAttempt","Grid","container","xs","alignItems","mx","px","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","active","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","perspective","colors","window","location","hostname","match","createMuiTheme","h1","fontFamily","fontSize","h2","h3","h4","h5","h6","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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mI,YAAa,QACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,gBC/CrC7J,QACW,cAA7B8J,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uCCNF3K,EAAQ4K,YAAe,CACzB3K,WAAY,CACV4K,GAAI,CACFC,WAAY,CACV,gBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAhF,KAAK,KACPiF,SAAU,IAEZC,GAAI,CACFF,WAAY,CACV,gBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAhF,KAAK,KACPiF,SAAU,IAEZE,GAAI,CACFH,WAAY,CACV,gBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAhF,KAAK,KACPiF,SAAU,IAEZG,GAAI,CACFJ,WAAY,CACV,gBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAhF,KAAK,KACPiF,SAAU,IAEZI,GAAI,CACFL,WAAY,CACV,gBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAhF,KAAK,KACPiF,SAAU,IAEZK,GAAI,CACFN,WAAY,CACV,gBACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAhF,KAAK,KACPiF,SAAU,OAIhB/K,EAAQqL,YAAoBrL,GAE5BsL,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,CAAezL,MAAOA,GACpB,kBAAC0L,EAAA,EAAD,MACA,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDUpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1E,GACL2E,QAAQ3E,MAAMA,EAAM4E,c","file":"static/js/main.7e705648.chunk.js","sourcesContent":["import React from \"react\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport {\n  Button,\n  Popover,\n  makeStyles,\n  Typography,\n  Box,\n} from \"@material-ui/core/\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction HowToPlay() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <>\n      <Button\n        aria-describedby={id}\n        size=\"small\"\n        onClick={handleClick}\n        startIcon={<InfoIcon />}\n      >\n        How To Play\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Box m={2}>\n          <Box textAlign=\"center\">\n            <Typography variant=\"h4\">How To Play</Typography>\n          </Box>\n          <div>\n            The computer will automatically generate 4 random numbers that does\n            not repeat. You will need to guess the number based on the clues\n            given.\n            <ul>\n              <li>\n                If you guess the{\" \"}\n                <strong>correct number(s) in the correct position</strong>, the\n                computer will provide you number of correct numbers with the\n                clue \"A\".\n              </li>{\" \"}\n              <li>\n                If you guess the{\" \"}\n                <strong>correct number(s) but in the wrong position</strong>,\n                the computer will provide you with the clue \"B\".\n              </li>\n            </ul>\n            Example:\n            <ul>\n              <li>Computer generate number: 9527</li>\n              <li>Your guess: 7593</li>\n              <li>\n                Clue: 1A2B\n                <br />\n                [1A: 5 is in the correct position; 2B: 7 and 9 are both correct\n                numbers in the wrong position]\n              </li>\n            </ul>\n            <small>Made with ♥ by Nancy </small>\n            <a href=\"https://github.com/nancyyeh\" target=\"_blank\">\n              <img src=\"github.svg\" width=\"18\" height=\"18\" title=\"github\" />\n            </a>\n          </div>\n        </Box>\n      </Popover>\n    </>\n  );\n}\n\nexport default HowToPlay;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function AlertDialog({\n  alertTitle,\n  alertDetails,\n  buttonTitle,\n  isOpen,\n  onClose,\n}) {\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{alertTitle}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {alertDetails}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {buttonTitle}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport HowToPlay from \"./HowToPlay\";\nimport AlertDialog from \"./AlertDialog\";\nimport { Button, Typography, Grid, TextField, Box } from \"@material-ui/core/\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from \"@material-ui/core/\";\nimport { Dialog, DialogActions, DialogTitle } from \"@material-ui/core/\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Confetti from \"react-dom-confetti\";\nconst useState = React.useState;\nconst useEffect = React.useEffect;\n\n//LocalState\nconst useLocalState = (localStorageKey) => {\n  const [value, setValue] = useState(\n    localStorage.getItem(localStorageKey) || \"\"\n  );\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, value);\n  }, [value]);\n\n  return [value, setValue];\n};\n\nfunction App() {\n  const [answer, setAnswer] = useState(null);\n  const [guess, setGuess] = useState(\"\");\n  const [attempt, setAttempt] = useState(0);\n  const [attemptHistory, setHistory] = useState({});\n  const [seconds, setSec] = useState(0);\n  const [isTimerActive, setIsTimerActive] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [fastest, setFastest] = useLocalState(\"fastest\");\n  const [least, setLeast] = useLocalState(\"least\");\n  const [alertMessage, setAlertMessage] = useState(null);\n\n  //Confetti\n  const config = {\n    angle: 90,\n    spread: 300,\n    startVelocity: \"80\",\n    elementCount: \"200\",\n    dragFriction: 0.15,\n    duration: 3000,\n    stagger: 3,\n    width: \"10px\",\n    height: \"10px\",\n    perspective: \"500px\",\n    colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"],\n  };\n\n  // generate a random number to begin\n  useEffect(() => {\n    generateNumber();\n  }, []);\n\n  // timer start when attempt is greater than 0 (started guessing)\n  useEffect(() => {\n    if (attempt > 0) {\n      setIsTimerActive(true);\n    }\n  }, [attempt]);\n\n  // Action when guesed correctly\n  useEffect(() => {\n    if (isCorrect === true) {\n      // Congrats Message\n      setAlertMessage({\n        title: \"CONGRATSSSSSSS!!!!\",\n        body: `You got it right with ${attempt} attempts using ${seconds} seconds!`,\n        button: \"ok\",\n      });\n      // stop timmer and disabled submit button\n      setIsTimerActive(false);\n      setIsSubmitDisabled(true);\n      setIsTextDisabled(true);\n      // set Best Score\n      if (least === \"\" && fastest === \"\") {\n        setFastest(seconds);\n        setLeast(attempt);\n      } else if (attempt <= least && seconds < fastest) {\n        setFastest(seconds);\n        setLeast(attempt);\n      }\n    }\n  }, [isCorrect]);\n\n  //Timer - updating time\n  useEffect(() => {\n    let interval = null;\n    if (isTimerActive) {\n      interval = setInterval(() => {\n        setSec((seconds) => seconds + 1);\n      }, 1000);\n    } else if (!isTimerActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerActive, seconds]);\n\n  //generate a random number for people to guess on\n  const generateNumber = () => {\n    function shuffle(array) {\n      array.sort(() => Math.random() - 0.5);\n    }\n    const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    shuffle(numbers);\n    const fourNum = numbers.slice(0, 4);\n    setAnswer(fourNum.join(\"\"));\n    setAttempt(0);\n    setHistory({});\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // action when clicked restart game\n  const clickedRestart = () => {\n    handleClose();\n    generateNumber();\n    setSec(0);\n    setIsTimerActive(false);\n    setIsSubmitDisabled(false);\n    setIsTextDisabled(false);\n    setIsCorrect(false);\n  };\n\n  //helpper function\n  const isGuessExist = (guessed, history) => {\n    return Object.values(history).some((item) => {\n      return item.guess === guessed;\n    });\n  };\n  // action when submit guesses\n  const checkMatch = () => {\n    if (guess.length !== 4) {\n      setAlertMessage({\n        title: \"Woopsie Daisy!\",\n        body:\n          \"It looks like you missed something! Make sure you have entered 4 numbers.\",\n        button: \"ok\",\n      });\n    } else if (isGuessExist(guess, attemptHistory)) {\n      setAlertMessage({\n        title: \"Try something new!\",\n        body: \"You have guessed this number already. Try a number!\",\n        button: \"ok\",\n      });\n    } else {\n      let a = 0;\n      let b = 0;\n      for (var i = 0; i < guess.length; i++) {\n        let number = guess[i];\n        if (answer.includes(number)) {\n          if (guess[i] === answer[i]) {\n            a += 1;\n          } else {\n            b += 1;\n          }\n        }\n      }\n      if (a === 4) {\n        setIsCorrect(true);\n      }\n      const newAttempt = attempt + 1;\n      const AsBs = a + \"A\" + b + \"B\";\n      setAttempt(newAttempt);\n      setHistory({\n        ...attemptHistory,\n        [newAttempt]: {\n          attemptNumber: newAttempt,\n          guess: guess,\n          AsBs: AsBs,\n        },\n      });\n      setGuess(\"\");\n    }\n  };\n\n  //past attempts to be insert into Table\n  const pastAttempts = Object.entries(attemptHistory).map(([key, value]) => {\n    return (\n      <TableRow key={key}>\n        <TableCell align=\"center\">{value.attemptNumber}</TableCell>\n        <TableCell align=\"center\">{value.guess}</TableCell>\n        <TableCell align=\"center\">{value.AsBs}</TableCell>\n      </TableRow>\n    );\n  });\n\n  const regexp = /^[0-9\\b]+$/;\n  const [guessError, setGuessError] = useState(false);\n  const [guessHelper, setGuessHelper] = useState(\"\");\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [isTextDisabled, setIsTextDisabled] = useState(false);\n\n  // Handle guess changed\n  const handleGuessChange = (event) => {\n    let guessInput = event.target.value;\n    if (guessInput === \"\" || regexp.test(guessInput)) {\n      setGuess(event.target.value);\n    }\n\n    // return T or F on if there is repeated num\n    const isRepeated = (nums) => {\n      return new Set(nums).size !== nums.length;\n    };\n    if (isRepeated(guessInput)) {\n      setGuessError(true);\n      setGuessHelper(\"Error: duplicated numbers\");\n      setIsSubmitDisabled(true);\n    } else {\n      setGuessError(false);\n      setIsSubmitDisabled(false);\n      setGuessHelper(\"\");\n    }\n  };\n  // clear best score\n  const clearBestScore = () => {\n    setLeast(\"\");\n    setFastest(\"\");\n  };\n\n  return (\n    <Box\n      className=\"App\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      p={2}\n    >\n      <Box className=\"game-title\" p={2}>\n        <img src=\"bullsandcows.png\" alt=\"bull_and_cows\" width=\"70%\" />\n        <HowToPlay />\n        <Typography color=\"textSecondary\" gutterBottom>\n          An old code-breaking challenge - it is proven that any number could be\n          solved within seven turns. Can you beat it in seven turns?\n        </Typography>\n      </Box>\n\n      <Box className=\"input-details\" p={2}>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"You sure you want to start a new game?\"}\n          </DialogTitle>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={clickedRestart} color=\"primary\" autoFocus>\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <div>\n          <TextField\n            error={guessError}\n            id=\"guess\"\n            label=\"Guess\"\n            onChange={handleGuessChange}\n            value={guess}\n            helperText={guessHelper}\n            inputProps={{ maxLength: 4 }}\n            disabled={isTextDisabled}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={checkMatch}\n            disabled={isSubmitDisabled}\n          >\n            Submit\n          </Button>\n          <Button variant=\"contained\" onClick={handleClickOpen}>\n            <RefreshIcon />\n          </Button>\n        </div>\n      </Box>\n\n      <Box className=\"history-details\" p={2}>\n        <Typography variant=\"h2\">History</Typography>\n        {least && (\n          <Typography variant=\"h4\">\n            Best Score: {least} attemps in {fastest} seconds\n            <Button size=\"small\" onClick={clearBestScore}>\n              <DeleteIcon />\n            </Button>\n          </Typography>\n        )}\n\n        <Typography variant=\"h5\">\n          <Grid container>\n            <Grid item xs={6}>\n              Attempt(s): {attempt}\n            </Grid>\n            <Grid item xs={6}>\n              Timer: {seconds} second(s)\n            </Grid>\n          </Grid>\n        </Typography>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          mx=\"auto\"\n          m={1}\n          px={4}\n        >\n          <TableContainer component={Paper}>\n            <Table size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Attempt</TableCell>\n                  <TableCell align=\"center\">Guess</TableCell>\n                  <TableCell align=\"center\">Clue</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>{pastAttempts}</TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Box>\n\n      <AlertDialog\n        alertTitle={alertMessage?.title}\n        alertDetails={alertMessage?.body}\n        buttonTitle={alertMessage?.button}\n        isOpen={alertMessage !== null}\n        onClose={() => {\n          setAlertMessage(null);\n        }}\n      />\n      <Confetti active={isCorrect} config={config} />\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  responsiveFontSizes,\n} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  typography: {\n    h1: {\n      fontFamily: [\n        \"Luckiests Guy\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      fontSize: 75,\n    },\n    h2: {\n      fontFamily: [\n        \"Luckiests Guy\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      fontSize: 57,\n    },\n    h3: {\n      fontFamily: [\n        \"Luckiests Guy\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      fontSize: 37,\n    },\n    h4: {\n      fontFamily: [\n        \"Luckiests Guy\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      fontSize: 27,\n    },\n    h5: {\n      fontFamily: [\n        \"Luckiests Guy\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      fontSize: 19,\n    },\n    h6: {\n      fontFamily: [\n        \"Luckiests Guy\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n      fontSize: 26,\n    },\n  },\n});\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}